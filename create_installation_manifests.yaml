- name: Create Installation Manifests and Prepare HTTP server
  hosts: utility
  gather_facts: yes
  vars_files:
  - default_vars.yaml
  vars:
    master_ign_file: "{{ cluster_name }}/master.ign"
    worker_ign_file: "{{ cluster_name }}/worker.ign"
    bootstrap_ign_file: "{{ cluster_name }}/bootstrap.ign"
    http_document_root: "/var/www/html/ignitions"
    bootstrap_ignition_config_url: "http://{{ ansible_default_ipv4.address }}:{{ httpd_port }}/ignitions/{{ cluster_name }}_bootstrap.ign"
  tasks: 
  - name: Create new cluster's directory on network utility server
    file:
      path: "{{ cluster_name }}"
      state: directory

  - name: Create new cluster's directory on ansible control node
    file:
      path: "ignitions/{{ cluster_name }}"
      state: directory
    delegate_to: localhost

  - name: Generate install-config.yaml and put it into cluster's directory
    template:
      src: install-config.j2
      dest: "{{ cluster_name }}/install-config.yaml"

  - name: Backup install-config.yaml
    copy:
      src: "{{ cluster_name }}/install-config.yaml"
      dest: install-config.yaml
      remote_src: yes

  - name: Create installation manifests of new cluster
    command: openshift-install create manifests --dir={{ cluster_name }}
    
  - name: Remove machines and machinesets
    command: rm -f {{ cluster_name }}/openshift/99_openshift-cluster-api_master-machines-*.yaml {{ cluster_name }}/openshift/99_openshift-cluster-api_worker-machineset-*.yaml
    when: openshift_major_version == 4.5
    
  - name: Set masters as unschedulable
    lineinfile:
      path: "{{ cluster_name }}/manifests/cluster-scheduler-02-config.yml"
      regexp: 'mastersSchedulable: true'
      line: '  mastersSchedulable: false'
    when: set_masters_unschedulable | default(False)
    
  - name: Create ignition configs of new cluster
    command: openshift-install create ignition-configs --dir={{ cluster_name }}

  - name: Copy bootstrap ignition file to http server
    copy:
      remote_src: yes
      src: "{{ bootstrap_ign_file }}"
      dest: "{{ http_document_root }}/{{ cluster_name }}_bootstrap.ign"
    become: yes
  
  - name: Check that http server is serving bootstrap ignition file
    uri:
      url: "{{ bootstrap_ignition_config_url }}"
      return_content: no
      status_code: 200
    delegate_to: localhost

  - name: Fetch the ignition files to localhost
    fetch:
      src: "{{ item }}"
      dest: "ignitions/{{ cluster_name }}/"
      flat: yes
    with_items:
    - "{{ cluster_name }}/master.ign"
    - "{{ cluster_name }}/worker.ign"
    - "{{ cluster_name }}/bootstrap.ign"
